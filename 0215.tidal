hush

d4 silence

d1 $ slow 2 $stack[
  s "~ <arp:4 arp:4> ~ ~ "
 # up "<24 30>" # gain "0"
 , n "~ <d5 e5> ~ ~" # s "imp" # sustain "1.3" # gain "1.2" #pan "0.2"
  # nudge "0.2"
 , n "~ <a5 g5> ~ ~" # s "imp" # sustain "1.2" # gain "1.1" # pan "0.8"
 , s "bd <~ [~<[hc hc] cp>]> <[]> ~" # shape "0.7"
]

d7 $ stack[
 jux(rev) $ chop 2$ s "numbers:2/2" # room "0.7" #orbit "1"
 # sustain "3"
 # speed "-1.1" # pan "0.6"
]

d3 $fast 2 $ stack[
 slowcat[
  s "bd ~ ~ <bd ~ bd> "
  ,s"~ ~ bd/2 ~"
  ],
  slowcat[
   n "d2 ~ ~ d2"
   ,n"~ ~ d2/2 ~"
  ] # s "tutorial4" # pan "0.4",
  slowcat[
   n "d3 ~ ~ ~" #s "tutorial4" #sustain "1"
   # accelerate "<1.5 ~ 0 ~>",
   n "d3 ~ <d3 ~ ~ ~> d3" # s "tutorial4"
  ] # shape "0.5" # pan "0.6"
]


d1 $ stack[
 stack[
  s "hc:4 [<ho hc> hc hc*3? hc] <cp ~> ~"
  # pan "0.4 0.6",
  s "bd ~ bd/3 bd/2" # shape "0.5"
 ],
 stack[
  -- s "<mt mt:3 ~> can <can:2 [~ can:4]>" # delay "2"
    -- # pan "0.2",
  n "d3 ds3 ~ d3 " # s "tutorial4" # sustain "2 0.2 0.2 0.4",
  loopAt 2 $ gap "16"
  $ s "blue numbers:4" # speed "-2" # crush "8"
 ]
]

 # crush "0"

d1 $ jux (slow 2)
$ slow  2
$ every 4 (rev) $ stack [
 s "<ho ~> <~ hc:2*2> <~ cp> hc:3/4 hc cp hc ~",
 s "bd ~ ~ bd/2" # shape "0.8",
 s "metal can*13? mt mt" # shape "0.7"
] # up "-2 -10 -12 -4"
# cut "0"
-- # crush "4"


d2 $ chop 4
$ every 4 (rev) $ stack [
 s "<ho ~> <~ hc:2*2> <~ cp> hc:3/4 hc cp hc ~",
 s "bd ~ ~ bd/2" # shape "0.8"
] # up "12"
# cut "0"
-- # crush "0.9"

d4 $ chop 4
$ every 4 (rev) $ stack [
 s "<ho ~> <~ hc:2*2> <~ cp> hc:3/4 hc cp hc ~",
 s "bd ~ ~ bd/2" # shape "0.8"
] # up "-12"


d7 $ loopAt 1 $ stack [
 n "d4" # s "tutorial4" # sustain "8" # gain "0.8",
 n "d6 c4" # s "tutorial4" # sustain "9" # gain "0.7",
 n "e6" # s "imp" # sustain "8" # gain "0.8"
] # pan "<0.8 0.2>"
-- # sustain "0.2"
# accelerate "<0.8 2 -0.5 -3 0.4 3>"

d1 $ stack [
 swingBy (1/"<6 2 6 6>") 3 $s "hh*8",
 s "bd cp"
]

d3 $ slow 1 $ swingBy (1/6) 4 $ n "~ <e2 e3>  ~ <~ g3> <a3 ~ a4 a3 > b3/2 ~ e4"
# s "tutorial4"
-- # s "supergong"
# crush "6"
# shape "0.7"
-- # sustain "0.2 0.4 0.3 0.3"

d3 $ slow 2 $ n "~ e3 ~ ~ g3 ~a3 ~ e4"
# s "tutorial4"
# shape "0.8"

# sustain "0.2 "

d1 $ fast 2
$ every 16(chop 16)
$ jux (slow 3)
$ every 3 (gap 12)
$ every 4 (jux(rev)) $ sound "[bd:3 [hh bd:2]] feel:3 cp cp"
-- $ every 2 (jux(fast 2))  $ sound "[bd:3*4? [hh bd:2]] <feel:3 amencutup> cp cp"
# speed "-2 1.5 0.9 2"


d1 $ silence

d2 $ sound "feel(<4 3 3 3>,8)" # pan "0.7"
# cutoff "10000" # gain "1.1"
# shape "0.6"

d2 $ stack[
sound "feel(3,8)" # pan "0.7" # shape "0.6"
# cutoff "10000" # gain "1.1",
s "hc"
]

hush

d2 $ sound "ext:3 ext:2 [ext:2 ext:2] ext:2/4"
# gain "0.7" # speed "-1 2 1 0.5"
# room "0.9"

d2 $ sound "feel(4,7,12)" # gain "1.2"

d1 $ sound "can(<4 5>,7,12)" # gain "1.2"

d3 $ sound "bass/4" # gain "1.2"
# sustain "3"
# cut "-1"
# accelerate "-2"

d2 $ s "feel feel feel" # gain "1.1"

d2 $ stack[
 -- s "feel:2 feel:2 feel:2" # pan "0.3"
 s "feel:2(4,7,12)" # pan "0.3"
 , s "feel(<4 4 4 5>,7,12)" #gain "1.1" # pan "0.0.7"
]

d2 silence

d6 $ s "mt(<4 3 6 4>,7,12)"
# nudge "0"
# pan "1"

d3 $ s "mt(<4 3 6 4>,7,12)"
# nudge "<0 0 0 0 0.1 0.1 0.1 0.2 0.2 0.2 0.3 0.3 0.3 0.4 0.4 0.5 0.5 0.5 0.5>"
# pan "0"

d2 $ sound "bd sn" # pan "0.9"

d9 $ sound "metal metal metal metal" # gain "0.9"
# speed "2 1 1 1" # nudge "0.5"

d1 $ stack [
 slow 2 $ sound "bd ~ ~ bd ~ ~ bd ~" # pan "0.6" # gain "1.2",
 sound "sax ~ ~ sax:2 ~" # speed (choose [-1, 0.5, -0.5, 1.5]) # gain "0.8"
]

d3 $ slow 2 $ n "c3 ~ ~ ~ ~ ~ ~ ~" # sound "tutorial4" # pan "0.5" # gain "1.3"

d3 $ slow 2 $ n "~ ~ c2 b2 ~ c3 ~ ~" # sound "tutorial4" # pan "0.5" # gain "1.3"

d2 $ sound "bd ~ bd ~" # pan "0.6" # gain "1.2"

d2 $ sound "bd hc bd <hc cp>" # pan "0.6"
# gain "1.2"

d3 $ slow 2 $ n "c3 ~ ~ ~ g2 ~ gs2 ~" # sound "tutorial4" # pan "0.5" # gain "1.3"



d2 $ n "c2 ~ b2 c3" # sound "tutorial4" # pan "0.5" # gain "1.3"

d2 $ stack [
stut 5 0.3 (0.2) $ every 8 (const (sound "cp cp cp:1 ~"))
$ sound "~ hc ~ hc" # pan "0",
]
sound "~ hh ~ hh" # pan "1" # gain "1.2"

hush

d5 $ sound "glitch:2/2 ~" # room "0.9"

d2 $ n "c2 ~ ~ b2 ~ c3 ~ ~" # sound "tutorial4" # pan "0.5" # gain "1.3"

d2 $ n "c2 ~ c3 b2 c3 ~ c4 ~" # sound "tutorial4" # pan "0.5" # gain "1.3"
# sustain "0.2 0.5 1 0.2"

d4 $ sound "hh hh hh hh hh hh hh hh"

d4 $ s "hh hh hh"

d5 $ sound "glitch:2/2 cp" # room "1.2"

d4 $ every 4 (stut 4 0.4 (0.6)) $ sound "hh hh hh hh hh hh hh hh"

d2 $ n "c3 c3 c3?  ~" # sound "tutorial4" # pan "0.5" # gain "1.3"
# sustain "0.2 0.5? 0.2"

d2 $ n "c2 ~ c3 cs4 c3 ~ c4 ~" # sound "tutorial4" # pan "0.5" # gain "1.3"
# sustain "0.2 0.5 1 0.2"

t1 (xfadeIn 16) $ stack[
 sound "hh:3 voodoo:3 ~ ~ hh:3 ~ ~ hh:2" # pan "0",
 sound "hh:3 voodoo:3 ~ hh:3 ~ ~ ~ hh:2" # pan "1"
]

d1 $ stack[
 sound "hh:3 voodoo:3 ~ ~ hh:3 ~ ~ hh:2" # pan "0",
 sound "hh:3 voodoo:3 ~ hh:3 ~ ~ ~ hh:2" # pan "1",
 sound "bd ~ hc*3? bd ~ h:1/2 bd ~" # pan "0.6" # gain "1.1"
 # shape "0.8" # speed "1 1 1 1 1 -2 -2 1 -0.3"
]

d4$ every 4 (rev) $ sound "glitch:6*8" # pan sine1
# gain "0.8 1.2 1 0.7"

d1 $ sound "hh*32" # cutoff (scale 300 1000 $ slow 4 $ sine1) # resonance "0.4" # pan sine1
d3 $ sound "hh*32" # cutoff (scale 0.1 700 $ slow 8 $ sine1) # resonance "0.1"

t5 (xfadeIn 16) $ slow 2 $ sound "mt [mt:2 ~] ~ [sn:1 mt] mt:4 ~ [mt:2 mt] ~"
# shape "0.7"

d3 $ slow 2 $ sound "[808:2 cp] ~ [hc cp:2 ~ mt] ~"

d1 $ sound "bass:2/2 bass/2 bass/2 ~" # shape "0.9"

d1 $ stack [
sound "bass:2/2 bass/2 bass/3 ~" # shape "0.9" # pan "0.6",
sound "bd/2 bd/4 bd/2 ~" # shape "0.9" # pan "0.4"
]

d3 $ slow 2 $ sound "[808:2 cp] ~ [hc cp:2 ~ mt] ~"

t4 (xfadeIn 16) $ n "[c4 d5 ~] ~ [g5 a4 b5] [~ c2]"
# sound "supergong" # sustain (choose [0.5,1,2,0.04])

d4 $ every 2 (jux(rev)) $ n "[c4 d6 ~] ~ [g5 a4 b5] [~ c2]"
# sound "supergong" # sustain (choose [0.5,1,2,0.04])

solo $ d4 $ jux (slow 2) $ every 2 (jux(rev)) $ n "[c4 e6 ~] ~ [g5 a6 b5] [~ c2]"
# sound "supergong" # sustain (choose [0.5,1,2,0.04])

d1 $ stack[
 sound "hh:2 voodoo:1 ~ ~ hc:3 ~ ~ mt:2" # pan "0",
 sound "hh:3 voodoo:2 ~ hh:3 ~ ~ ~ can:2" # pan "1"
]

d1 $ stack[
 sound "hh:2 voodoo:1 ~ ~ can:3 ~ ~ mt:2" # pan "0",
 sound "hh:3 voodoo:2 ~ hh:3 ~ ~ ~ can:2" # pan "1",
 slow 4 $ sound "bd:4 ~ ~ ~ bd:2 ~ bd:3 ~" # shape "0.9"
]

hush

solo $ d1 $ stack[
 sound "hh:3 voodoo:3 ~ ~ hh:3 ~ ~ hh:2" # pan "0",
 sound "hh:3 voodoo:3 ~ hh:3 ~ ~ ~ hh:2" # pan "1"
]

d2 $ sound "[hh ~ hh] hh [] hh"


-- huskell
[x | x<-[10..20],x/=13,x/=15]
[x*y | x <- [2,5,10],y <- [8,10,11]]

let xxs = [[1,3,5,2,3,1,2,4,5],[1,2,3,4,5,6,7,8,9],
          [1,2,4,2,1,6,3,1,3,2,3,6]]
[[x | x<- xs, even x] | xs <- xxs]
--taple
(1,3)
(3,'a',"hello")
(50,50.4,"hello",'b')
[1,2]
fst (8,11)
fst ("Wow",False)
snd (8,2)

zip [1..10]["apple","orang","chery","mango"]
let triples = [(a,b,c) | a<- [1..10],b<-[1..10],c<-[1..10]]
let rightTriangles = [(a,b,c)| c<-[1..10],a<-[1..c],b<-[1..a],a^2 + b^2 == c^2,a+b+c==24]
rightTria:ngles

:t 'a'
:t True
:t "HELLO"
:t (True,'a')
:t 4 == 5
removeNonUppercase st = [c | c <- st,c `elem` ['A'..'Z']]


d1 $ sound "bd ~ ~ bd ~ ~"

d2 $ sound "[] hh [] hh"

d2 $ sound "[hh ~ hh] hh [] hh"

d3 $
jux (rev) $
stack [
sound " [] [] arpy [] []" # pan "0.9",
--sound " [hh hh hh] [] [] [] [arpy:2 arpy:3]" # pan "0.5 0.6 0 1",
sound "bd [mt sn:3] cp []" # pan "0.1",
sound "[] [] future [] [] [] [arpy:5 arpy:2 arpy:4] []"
]

d3 silence
d2 silence
hush

d1 $ every 4 (|=| speed "2") $ every 8 (rev)  $ sound "arpy arpy" # speed "0.4 1" # pan rand

d3 $ every 4 (|=| speed "2") $ sound "hh mt:2 ~ [mt:4 mt] ~ mt:2 " # pan "0.3"

d1 $ sound "bd cp"

d1 $ sound "bd*8 sn*8" # speed (scale 1 3 $ tril)

d1 $ sound "bd*8 sn*8" # speed (slow 4 $ scale 1 3 $ tril)

d1 $ sound "bd*8 sn*8" # speed (scale 4)

d1 $ sound "hh*32" # cutoff (scale 300 1000 $ slow 4 $ sine1) # resonance "0.4" # pan sine1
d1 $ sound "hh*32" # cutoff (scale 0.1 700 $ slow 8 $ sine1) # resonance "0.1"

d3 $ sound "{bd hh sn cp,arpy bass2 drum notes can}"
d3 $ sound "{bd hh sn cp,~ ~ ~ ~ ~}"
d3 $ sound "{~ ~ ~ ~,arpy bass2 drum notes can}"
d3 $ sound "{arpy bass2 drum notes can,bd hh sn cp}"
d3 $ sound "{arpy bass2 drum notes can}"
d3 silence
d1 $ (0.25 <~) $ sound "bd*2 cp*2 hh sn"
d1 $ sound "bd*2 cp*2 hh sn"
d1 $ every 3 (0.25 ~>) $ sound "bd*2 cp*2 hh sn"
d1 $ every 3 (0.4 ~>) $ sound "bd cp can bass2 sn"
d1 $ sound "~ arpy ~ arpy ~ arpy ~ arpy" # pan (rand) # gain 0.9


d1 $ sound "arpy*4" # pan (scale 0.25 0.75 $ rand)
d1 $ sound "arpy*8" # n (irand 50) # gain "0.9" # pan "0.6"
d2 $ s "hh*4? [hh cp?] hh*4? [hh cp?]" # pan (scale 0.1 0.9 $ rand)
d2 $ sometimesBy 0.25 (slow 2) $ s "hh*4? [hh cp?] hh*4? [hh cp?]" # pan (scale 0.1 0.9 $ rand) # gain "1.2"
d2 $ s "[bd sn cp hh]?"
d3 $ s "bd*16?"
d3 $ degradeBy 0.25 $ s "bd*16"
d3 $ sometimesBy 0.75 (slow 2) $ sound "bd*16"
d1 silence
d3 silence
d2 silence
d1 $ every 5 (|+| speed "0.5") $ every 4 (0.25 <~) $ every 3 (rev) $ s "mt mt:2 arpy*2 can" # speed "[1 1.25 0.75 -1.5]/3"
d1 $ whenmod 8 6 (rev) $ s "bd*2 arpy*2 cp hh*22"
d1 $ every 8 (rev) $ every 4 (density 2) $ s "bd hh sn cp"
d1 $ whenmod 16 14 (# speed "2") $ s "bd arpy*2 cp bass2"
d1 $ every 4 (const (s "cp*3")) $ sound "bd [mt? sn mt:2? mt:4?] cp*2? hh*4?"
d1 $ every 8 (const $ s "bd*4 sn*2") $ s "bd mt hh*4 can mt"
d1 $ s "cp"
d1 $ cat [s "bd sn" # vowel "[a o]/2",s "casio casio*2",s "drum drum drum drum"]
d1 $ stack [sound "bd sn mt cp" # vowel "[a i]/2" # gain "1.2" # pan "0.4",s "casio casio*2" # pan "0.3" # gain "0.7",sound "~ drum ~ drum", sound (samples "arpy*8" (run 16))]

d1 $ stack [sound "bd bd*2",
 sound "hh*2 [sn cp] cp future*4",
 sound (samples "arpy*8" (run 16))]

 d1 $ every 4 (slow 2) $ whenmod 5 3 (# speed "0.75 1.5") $ stack [sound "bd bd*2",
  sound "hh*2 [sn cp] cp future*4",
  sound (samples "arpy*8" (run 16))] # speed "[[1 0.8],[1.5 2]/5]"


d1 $ sound (samples "arpy*8" (run 8)) # speed "0.2" # cut "0.2"
d1 $ stack [
   sound (samples "arpy*8" (run 8)) # speed "0.25" # cut "1",
   sound (samples "bass2*6" (run 6)) # speed "0.5" # cut "2"
   ]

d2 $ stack [
    slow 2 $ sound "bd ~ ~ bd ~ ~ bd ~" # pan "0.6" # gain "1.2",
    sound "sax ~ ~ sax:2 ~" # speed (choose [-1, 0.5, -0.5, 1.5]) # gain "0.8"
]

hush

d1 $ sound (samples "hc*8" (iter 4 $ run 4))
t1 anticipate $ sound (samples "bd(2,8) cp" (run 3)) # gain "1.2"
t1 anticipate $ sound "{hh hh cp hh,bd bd bd ~ bd ~,hh*4}" # pan rand
t2 (xfadeIn 16) $ sound "bd*16?"
d1 $ midinote "90 100" # sound "sine"
d1 $ n "c5" # s "sine"
bps (120/60)

-- huskell

putStrLn "test"
mysum [] = 0
let (x:xs) = [1,2,3]
mysum(x:xs) = x + mysum xs
