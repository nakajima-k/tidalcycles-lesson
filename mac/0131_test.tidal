-- huskell
let xs = [(1,3),(4,3),(2,4),(5,3),(5,6), (3,1)]
[a + b | (a,b) <- xs]
[x*100+3 | (x,3) <- xs]

d1 $ every 2 (0.25 <~) $ every 4 (slow 1.5)
$ sound (samples "amencutup*1" (every 2 (density 1.2 ) $ density 1.33 $ run 32))
# speed "0.6 0.8 0.25"

-- d2 $ sound "909(3,8)" # speed "0.8"

d3 $ stack [
 every 4 (slow 1.5) $ every 2 (rev) $ sound "~ ~ glitch:2 [glasstap:2 glitch:1]"
 # speed "0.3 0.6 0.9" # gain "1.1",
 sound "909:4(3,8)" # speed "0.9 0.5 0.8",
  every 2 (chop 3) $ sound "bass2:2/2" # cutoff "100" # pan "0.3"
]

d3 $ stack [
every 4 (crush 11) $ smash 2 [2,4,6] $ sound (every 2 (0.5 <~)
$ samples "tabla*8" (every 5 (0.5 <~) $ every 3 (0.25 <~) $ density 1.25 $ run 26))
# speed "0.8 1.0 0.5 -0.8 1.0 0.75" # gain "0.9",
Follow sumisonic and others on SoundCloud.

Create a SoundCloud accountSign in
github.com/sumisonic/TidalDiarâ€¦/pattern_0002.tidal

d1 $ stack[
smash 2 [2,4,6] $ sound (every 2 (0.5 <~) $ samples "tabla*8" (every 5 (0.5 <~) $ every 3 (0.25 <~) $ density 1.25 $ run 26)) # speed "0.8 1.0 0.5 -0.8 1.0 0.75" # gain "0.9",
every 2 (0.5 <~) $ spread slow [4,6] $ sound "909(6,8)"
# speed "0.8" # shape "0.1" # gain "[1.1 0.9]*2",
]

d3 $ stack [
every 5 (rev) $ sound "click:3(9,12)" 
# speed "0.5 1.0 1.5" # gain "1.5",
sound "bass3/2 bleep:1" # speed "0.75" # gain "0.8",
sound "glitch:2(10,43)" # slow 4 (speed "-4 -8")
]

t3 anticipate $ rev $ slow 4 $ chop 16 $ sound "breaks125"

d3 $ stack [
every 4 (slow 1.5) $ every 2 (rev) $ sound "~ ~ glitch:2 [glasstap:2 glitch:1]"
# speed "0.3 0.7 0.9" # gain "1.1",
sound "~ 909:4(3,8)"
]

hush

d1 silence
hush
d2 $ sound "bd [~ hc] cp bd"
# delay "0.3"
# pan "0.3"

d1 $ every 4 (rev)
$ spread density [1,0.5]
$ n "[a3 ~ a4 a3] a3 [a4 a3] ~"
# sound "supergong"
|+| vowel "a"
# pan "0.8"

d3 $ n "a1 a1 d2 a3" # sound "supersaw"
# sustain "0.2"

hush

d1 $ slowspread density [1,0.75]
$ spread density [1,0.5,0.25]
$ degradeBy 0.5
$ sound (samples "hh*16" (irand 64))
# gain "0.8"
# unit "c"
# speed (choose[1,2])
# delay "0.1 0.9 0.5"
# delaytime "0.2"
# delayfeedback "0.5"

hush


d1 $ slowspread density [1,0.8]
$ n "[e6 ~ a6] ~ [a5 e5] [a6 d5 ~ d5]"
# sound "tutorial4"
# delay "0.1 0.6 0.9 0.4"
# sustain "0.3 1.6 0.4 1.5"

d2 $ stack [
sound "hh*8?" # pan "0.7",
sound "~ [cp ~ ~ mt]" # pan "0.3"
# delay "1.2?"
# speed "0.8",
sound "bd ~ ~ ~ ~ ~ ~ ~,bass:2"
]

d1 $ slowspread density [1,0.5]
$ every 2 (rev)
$ n "{e6 ~ [a5 b5] [b6 ~ d5],gs6 ~ [d6 e6*7] ~}"
# sound "tutorial4"
# delay "0.5 0.6 0.9 1.4"
# sustain "1.3 1.6 0.4 1.5"
# pan sine1
# delaytime "0.6 0.5 1.2"
# vowel "a i o i a"
-- # crush "0.5 0.7 0.2 0.6"

d1 $ slowspread density [1,0.75]
$ spread density [1,0.5,0.25]
$ degradeBy 0.5
$ sound (samples "hh*16" (irand 64))
# gain "0.8"
# unit "c"
# speed (choose[1,2])
# delay "0.1 0.9 0.5"
# delaytime "0.2"
# delayfeedback "0.5"


bps (200/120)
d1 $ sound "can:1"
t1 anticipate $ sound "can:1 can2 ~ [~ can]" # vowel "a i o"
d1 $ sound "can:1" |+| vowel "a" |+| speed "0.5"
d1 $ sound "can:1 can" |+| crush "10"
d1 $ sound "hh*16" |+| pan sine1
d1 $ sound "drum [can cp, can bd can:5]" |+| pan sine1
t1 anticipate $ sound "{can can:2,can bd can:5}"
hush
d1 $ sound "{bd hh can,hh drum:2 mt mt}"
t1 anticipate $ sound "bd can*32 bd can*16"


d1 $ n "[e5 fs6 b5 a5]*2" # sound "tutorial4"
d1 $ n "[e5 fs6 b5 a5,a5 b5 d6]*2" # sound "tutorial4"
d2 $ sound "bd ~ ~ hh bd ~ cp hh" # gain "1.1"
bps (200/120)
hush

d1 silence

bps (160/120)
d1 $ n "[e5 fs6 b5 a5]*2" # sound "tutorial4"

d1 $ n "[e5 fs6 b5 a5,a5 b5 d6]*2" # sound "tutorial4"
d2 $ sound "bd ~ ~ hh bd ~ cp hh" # gain "1.1" # pan "0.3"
d3 $ sound "mt:3 mt:1 ~ mt" # pan "0.8"

hush

d1 $ sound "in ~ "
bps (60/120)

d1 $ n "c5 ~ c5 ~ g5 ~ g5 ~ a5 ~ a5 ~ g5 ~ ~ ~" # sound "tutorial4"
# sustain "0.5*14 2.0"

d1 $ n "f5 ~ f5 ~ e5 ~ e5 ~ d5 ~ d5 ~ c5 ~ ~ ~" # sound "tutorial4"
# sustain "0.5*14 2.0"

hush

--huskell
:t 'a'
:t True
:t "HELLO"
:l newfunc1
:l baby
removeNonUppercase rRdD
